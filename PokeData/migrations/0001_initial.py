# Generated by Django 2.2.2 on 2019-06-15 21:43

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ability',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='AbilityChangelog',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('abilityId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Ability')),
            ],
        ),
        migrations.CreateModel(
            name='Berry',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('naturalGiftPower', models.IntegerField()),
                ('size', models.IntegerField()),
                ('maxHarvest', models.IntegerField()),
                ('growthTime', models.IntegerField()),
                ('soilDryness', models.IntegerField()),
                ('smoothness', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='BerryFirmness',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='BerryFlavor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flavor', models.IntegerField()),
                ('berryId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Berry')),
            ],
        ),
        migrations.CreateModel(
            name='Characteristic',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('geneMod5', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ContestEffect',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('appeal', models.IntegerField()),
                ('jam', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ContestType',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='EggGroup',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Encounter',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('minLevel', models.IntegerField()),
                ('maxLevel', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='EncounterCondition',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='EncounterConditionValue',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
                ('isDefault', models.BooleanField()),
                ('encounterConditionId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.EncounterCondition')),
            ],
        ),
        migrations.CreateModel(
            name='EncounterMethod',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
                ('order', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='EvolutionChain',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='EvolutionTrigger',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Generation',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='GrowthRate',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
                ('formula', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
                ('cost', models.IntegerField()),
                ('flingPower', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ItemCategory',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='ItemFlag',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='ItemFlingEffect',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='ItemPocket',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('iso639', models.CharField(max_length=250)),
                ('iso3166', models.CharField(max_length=250)),
                ('identifier', models.CharField(max_length=250)),
                ('official', models.IntegerField()),
                ('order', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='LocationArea',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('gameIndex', models.IntegerField()),
                ('identifier', models.CharField(blank=True, max_length=250, null=True)),
                ('locationId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Location')),
            ],
        ),
        migrations.CreateModel(
            name='Move',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
                ('power', models.IntegerField(blank=True, null=True)),
                ('pp', models.IntegerField(blank=True, null=True)),
                ('accuracy', models.IntegerField(blank=True, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('effectChance', models.IntegerField(blank=True, null=True)),
                ('contestEffectId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='PokeData.ContestEffect')),
                ('contestTypeId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='PokeData.ContestType')),
            ],
        ),
        migrations.CreateModel(
            name='MoveBattleStyle',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='MoveDamageClass',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='MoveEffect',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='MoveEffectChangelog',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='MoveFlag',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='MoveMetaAilment',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='MoveMetaCategory',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='MoveTarget',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Nature',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
                ('gameIndex', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PalParkArea',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='PokeathlonStat',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Pokedex',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
                ('isMainSeries', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Pokemon',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
                ('height', models.IntegerField()),
                ('weight', models.IntegerField()),
                ('baseExperience', models.IntegerField()),
                ('order', models.IntegerField()),
                ('isDefault', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='PokemonColor',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='PokemonForm',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('formIdentifier', models.CharField(blank=True, max_length=250, null=True)),
                ('isDefault', models.BooleanField()),
                ('isBattleOnly', models.BooleanField()),
                ('isMega', models.BooleanField()),
                ('formOrder', models.IntegerField()),
                ('order', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PokemonHabitat',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='PokemonMoveMethod',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='PokemonShape',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='PokemonSpecies',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
                ('genderRate', models.IntegerField()),
                ('captureRate', models.IntegerField()),
                ('baseHappiness', models.IntegerField()),
                ('isBaby', models.BooleanField()),
                ('hatchCounter', models.IntegerField()),
                ('hasGenderDifferences', models.BooleanField()),
                ('formsSwitchable', models.BooleanField()),
                ('order', models.IntegerField()),
                ('colorId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.PokemonColor')),
                ('evolutionChainId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.EvolutionChain')),
                ('evolvesFromSpeciesId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='PokeData.PokemonSpecies')),
                ('growthRateId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.GrowthRate')),
                ('habitatId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.PokemonHabitat')),
                ('shapeId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.PokemonShape')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Stat',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
                ('isBattleOnly', models.BooleanField()),
                ('gameIndex', models.IntegerField(blank=True, null=True)),
                ('damageClassId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='PokeData.MoveDamageClass')),
            ],
        ),
        migrations.CreateModel(
            name='SuperContestEffect',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('appeal', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
                ('damageClassId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='PokeData.MoveDamageClass')),
                ('generationId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Generation')),
            ],
        ),
        migrations.CreateModel(
            name='Version',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='VersionGroup',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('identifier', models.CharField(max_length=250)),
                ('order', models.IntegerField()),
                ('generationId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Generation')),
            ],
        ),
        migrations.CreateModel(
            name='VersionName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('versionId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Version')),
            ],
        ),
        migrations.CreateModel(
            name='VersionGroupRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('regionId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Region')),
                ('versionGroupId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.VersionGroup')),
            ],
        ),
        migrations.CreateModel(
            name='VersionGroupPokemonMoveMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pokemonMoveMethodId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.PokemonMoveMethod')),
                ('versionGroupId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.VersionGroup')),
            ],
        ),
        migrations.AddField(
            model_name='version',
            name='versionGroupId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.VersionGroup'),
        ),
        migrations.CreateModel(
            name='TypeName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('typeId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Type')),
            ],
        ),
        migrations.CreateModel(
            name='TypeGameIndices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gameIndex', models.IntegerField()),
                ('generationId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Generation')),
                ('typeId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Type')),
            ],
        ),
        migrations.CreateModel(
            name='TypeEfficacy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('damageFactor', models.IntegerField()),
                ('damageTypeId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='damage_type_id', to='PokeData.Type')),
                ('targetTypeId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target_type_id', to='PokeData.Type')),
            ],
        ),
        migrations.CreateModel(
            name='SuperContestEffectProse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flavorText', models.CharField(max_length=250)),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('superContestEffectId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.SuperContestEffect')),
            ],
        ),
        migrations.CreateModel(
            name='SuperContestCombo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstMoveId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='first_move_id', to='PokeData.Move')),
                ('secondMoveId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='second_move_id', to='PokeData.Move')),
            ],
        ),
        migrations.CreateModel(
            name='StatName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('statId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Stat')),
            ],
        ),
        migrations.CreateModel(
            name='RegionName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('regionId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Region')),
            ],
        ),
        migrations.CreateModel(
            name='PokemonType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slot', models.IntegerField()),
                ('pokemonId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Pokemon')),
                ('typeId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Type')),
            ],
        ),
        migrations.CreateModel(
            name='PokemonStat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('baseStat', models.IntegerField()),
                ('effort', models.IntegerField()),
                ('pokemonId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Pokemon')),
                ('statId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Stat')),
            ],
        ),
        migrations.CreateModel(
            name='PokemonSpeciesProse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('formDescription', models.CharField(max_length=250)),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('pokemonSpeciesId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.PokemonSpecies')),
            ],
        ),
        migrations.CreateModel(
            name='PokemonSpeciesName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('genus', models.CharField(blank=True, max_length=250, null=True)),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('pokemonSpeciesId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.PokemonSpecies')),
            ],
        ),
        migrations.CreateModel(
            name='PokemonSpeciesFlavorText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flavorText', models.CharField(max_length=250)),
                ('languageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('speciesId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.PokemonSpecies')),
                ('versionId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Version')),
            ],
        ),
        migrations.CreateModel(
            name='PokemonShapeProse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('awesomeName', models.CharField(max_length=250)),
                ('description', models.CharField(max_length=250)),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('pokemonShapeId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.PokemonShape')),
            ],
        ),
        migrations.CreateModel(
            name='PokemonMoveMethodProse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.CharField(max_length=250)),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('pokemonMoveMethodId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.PokemonMoveMethod')),
            ],
        ),
        migrations.CreateModel(
            name='PokemonMove',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField()),
                ('order', models.IntegerField()),
                ('moveId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Move')),
                ('pokemonId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Pokemon')),
                ('pokemonMoveMethodId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.PokemonMoveMethod')),
                ('versionGroupId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.VersionGroup')),
            ],
        ),
        migrations.CreateModel(
            name='PokemonItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tarity', models.IntegerField()),
                ('itemId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Item')),
                ('pokemonId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Pokemon')),
                ('versionId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Version')),
            ],
        ),
        migrations.CreateModel(
            name='PokemonHabitatName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('pokemonHabitatId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.PokemonHabitat')),
            ],
        ),
        migrations.CreateModel(
            name='PokemonGameIndice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gameIndex', models.IntegerField()),
                ('pokemonId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Pokemon')),
                ('versionId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Version')),
            ],
        ),
        migrations.CreateModel(
            name='PokemonFormPokeathlonStat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minimumStat', models.IntegerField()),
                ('baseStat', models.IntegerField()),
                ('maximumStat', models.IntegerField()),
                ('pokeathlonStatId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.PokeathlonStat')),
                ('pokemonFormId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.PokemonForm')),
            ],
        ),
        migrations.CreateModel(
            name='PokemonFormName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('formName', models.CharField(blank=True, max_length=250, null=True)),
                ('pokemonName', models.CharField(blank=True, max_length=250, null=True)),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('pokemonFormId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.PokemonForm')),
            ],
        ),
        migrations.CreateModel(
            name='PokemonFormGeneration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gameIndex', models.IntegerField()),
                ('generationId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Generation')),
                ('pokemonFormId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.PokemonForm')),
            ],
        ),
        migrations.AddField(
            model_name='pokemonform',
            name='introducedInVersionGroupId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.VersionGroup'),
        ),
        migrations.AddField(
            model_name='pokemonform',
            name='pokemonId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Pokemon'),
        ),
        migrations.CreateModel(
            name='PokemonEvolution',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('minimumLevel', models.IntegerField(blank=True, null=True)),
                ('timeOfDay', models.CharField(blank=True, max_length=250, null=True)),
                ('minimumHappiness', models.IntegerField(blank=True, null=True)),
                ('minimumBeauty', models.IntegerField(blank=True, null=True)),
                ('minimumAffection', models.IntegerField(blank=True, null=True)),
                ('realtivePhysicalStat', models.IntegerField(blank=True, null=True)),
                ('needsOverworldRain', models.BooleanField()),
                ('turnUpsideDown', models.BooleanField()),
                ('evolutionTriggerId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.EvolutionTrigger')),
                ('evolvedSpeciesId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evolved_species_id', to='PokeData.PokemonSpecies')),
                ('genderId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='PokeData.Gender')),
                ('heldItemId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='held_item_id', to='PokeData.Item')),
                ('knownMoveId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='PokeData.Move')),
                ('knownMoveTypeId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='known_move_id', to='PokeData.Type')),
                ('locationId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='PokeData.Location')),
                ('partySpeciesId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='party_species_id', to='PokeData.PokemonSpecies')),
                ('partyTypeId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='party_type_id', to='PokeData.Type')),
                ('tradeSpecies', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trade_species_id', to='PokeData.PokemonSpecies')),
                ('triggerItemId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trigger_item_id', to='PokeData.Item')),
            ],
        ),
        migrations.CreateModel(
            name='PokemonEggGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eggGroupId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.EggGroup')),
                ('speciesId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.PokemonSpecies')),
            ],
        ),
        migrations.CreateModel(
            name='PokemonDexNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pokedexNumber', models.IntegerField()),
                ('pokedexId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Pokedex')),
                ('speciesId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.PokemonSpecies')),
            ],
        ),
        migrations.CreateModel(
            name='PokemonColorName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('pokemonColorId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.PokemonColor')),
            ],
        ),
        migrations.CreateModel(
            name='PokemonAbility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isHidden', models.BooleanField()),
                ('slot', models.IntegerField()),
                ('abilityId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Ability')),
                ('pokemonId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Pokemon')),
            ],
        ),
        migrations.AddField(
            model_name='pokemon',
            name='speciesId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.PokemonSpecies'),
        ),
        migrations.CreateModel(
            name='PokedexVersionGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pokedexId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Pokedex')),
                ('versionGroupId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.VersionGroup')),
            ],
        ),
        migrations.CreateModel(
            name='PokedexProse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.CharField(max_length=250)),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('pokedexId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Pokedex')),
            ],
        ),
        migrations.AddField(
            model_name='pokedex',
            name='regionId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Region'),
        ),
        migrations.CreateModel(
            name='PokeathlonStatName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('pokeathlonStatId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.PokeathlonStat')),
            ],
        ),
        migrations.CreateModel(
            name='PalParkAreaName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('palParkAreaId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.PalParkArea')),
            ],
        ),
        migrations.CreateModel(
            name='PalPark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('baseScore', models.IntegerField()),
                ('rate', models.IntegerField()),
                ('areaId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.PalParkArea')),
                ('speciesId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.PokemonSpecies')),
            ],
        ),
        migrations.CreateModel(
            name='NaturePokeathlonStat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maxChange', models.IntegerField()),
                ('natureId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Nature')),
                ('pokeathlonStatId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.PokeathlonStat')),
            ],
        ),
        migrations.CreateModel(
            name='NatureName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('natureId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Nature')),
            ],
        ),
        migrations.CreateModel(
            name='NatureBattleStylePreference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lowHpPreference', models.IntegerField()),
                ('highHpPreference', models.IntegerField()),
                ('moveBattleStyleId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.MoveBattleStyle')),
                ('natureId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Nature')),
            ],
        ),
        migrations.AddField(
            model_name='nature',
            name='decreasedStatId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='decreased_stat_id', to='PokeData.Stat'),
        ),
        migrations.AddField(
            model_name='nature',
            name='hatesFlavorId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hates_flavor_id', to='PokeData.BerryFlavor'),
        ),
        migrations.AddField(
            model_name='nature',
            name='increasedStatId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='increased_stat_id', to='PokeData.Stat'),
        ),
        migrations.AddField(
            model_name='nature',
            name='likesFlavorId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes_flavor_id', to='PokeData.BerryFlavor'),
        ),
        migrations.CreateModel(
            name='MoveTargetProse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.CharField(max_length=250)),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('moveTargetId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.MoveTarget')),
            ],
        ),
        migrations.CreateModel(
            name='MoveName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('moveId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Move')),
            ],
        ),
        migrations.CreateModel(
            name='MoveMetaStatChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change', models.IntegerField()),
                ('moveId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Move')),
                ('statId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Stat')),
            ],
        ),
        migrations.CreateModel(
            name='MoveMetaCategoryProse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=250)),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('moveMetaCategoryId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.MoveMetaCategory')),
            ],
        ),
        migrations.CreateModel(
            name='MoveMetaAilmentName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('moveId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Move')),
            ],
        ),
        migrations.CreateModel(
            name='MoveMeta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minHits', models.IntegerField(blank=True, null=True)),
                ('maxHits', models.IntegerField(blank=True, null=True)),
                ('minTurns', models.IntegerField(blank=True, null=True)),
                ('maxTurns', models.IntegerField(blank=True, null=True)),
                ('drain', models.IntegerField()),
                ('healing', models.IntegerField()),
                ('ailmentChance', models.IntegerField()),
                ('flinchChance', models.IntegerField()),
                ('statChance', models.IntegerField()),
                ('metaAilmentId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.MoveMetaAilment')),
                ('metaCategoryId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.MoveMetaCategory')),
                ('moveId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Move')),
            ],
        ),
        migrations.CreateModel(
            name='MoveFlavorText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flavorText', models.CharField(max_length=250)),
                ('languageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('moveId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Move')),
                ('versionGroupId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.VersionGroup')),
            ],
        ),
        migrations.CreateModel(
            name='MoveFlagProse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.CharField(max_length=250)),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('moveFlagId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.MoveFlag')),
            ],
        ),
        migrations.CreateModel(
            name='MoveFlagMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('moveFlagId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.MoveFlag')),
                ('moveId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Move')),
            ],
        ),
        migrations.CreateModel(
            name='MoveEffectProse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shortEffect', models.CharField(max_length=250)),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('moveEffectId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.MoveEffect')),
            ],
        ),
        migrations.CreateModel(
            name='MoveEffectChangelogProse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effect', models.CharField(max_length=250)),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('moveEffectChangelogId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.MoveEffectChangelog')),
            ],
        ),
        migrations.AddField(
            model_name='moveeffectchangelog',
            name='changedInVersionGroupId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.VersionGroup'),
        ),
        migrations.AddField(
            model_name='moveeffectchangelog',
            name='effectId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.MoveEffect'),
        ),
        migrations.CreateModel(
            name='MoveDamageClassProse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.CharField(max_length=250)),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('moveDamageClassId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.MoveDamageClass')),
            ],
        ),
        migrations.CreateModel(
            name='MoveChangelog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('power', models.IntegerField(blank=True, null=True)),
                ('pp', models.IntegerField(blank=True, null=True)),
                ('accuracy', models.IntegerField(blank=True, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('effectChange', models.IntegerField(blank=True, null=True)),
                ('changedInVersionGroupId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.VersionGroup')),
                ('effectId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='PokeData.MoveEffect')),
                ('moveId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Move')),
                ('targetId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='PokeData.Pokemon')),
                ('typeId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Type')),
            ],
        ),
        migrations.CreateModel(
            name='MoveBattleStyleProse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('moveBattleStyleId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.MoveBattleStyle')),
            ],
        ),
        migrations.AddField(
            model_name='move',
            name='damageClassId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.MoveDamageClass'),
        ),
        migrations.AddField(
            model_name='move',
            name='effectId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.MoveEffect'),
        ),
        migrations.AddField(
            model_name='move',
            name='generationId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Generation'),
        ),
        migrations.AddField(
            model_name='move',
            name='superContestEffectId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.SuperContestEffect'),
        ),
        migrations.AddField(
            model_name='move',
            name='targetId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Pokemon'),
        ),
        migrations.AddField(
            model_name='move',
            name='typeId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Type'),
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machineNumber', models.IntegerField()),
                ('itemId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Item')),
                ('moveId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Move')),
                ('versionGroupId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.VersionGroup')),
            ],
        ),
        migrations.CreateModel(
            name='LocationName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('subtitle', models.CharField(blank=True, max_length=250, null=True)),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('locationId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Location')),
            ],
        ),
        migrations.CreateModel(
            name='LocationGameIndice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gameIndex', models.IntegerField()),
                ('generationId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Generation')),
                ('locationId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Location')),
            ],
        ),
        migrations.CreateModel(
            name='LocationAreaProse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250, null=True)),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('locationAreaId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.LocationArea')),
            ],
        ),
        migrations.CreateModel(
            name='LocationAreaEncounterRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.IntegerField()),
                ('encounterMethodId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.EncounterMethod')),
                ('locationAreaId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.LocationArea')),
                ('versionId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Version')),
            ],
        ),
        migrations.AddField(
            model_name='location',
            name='regionId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Region'),
        ),
        migrations.CreateModel(
            name='LanguageName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('languageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='language_id', to='PokeData.Language')),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='local_language_id', to='PokeData.Language')),
            ],
        ),
        migrations.CreateModel(
            name='ItemProse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shortEffect', models.CharField(max_length=250)),
                ('itemId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Item')),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
            ],
        ),
        migrations.CreateModel(
            name='ItemPocketName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('itemPocketId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.ItemPocket')),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
            ],
        ),
        migrations.CreateModel(
            name='ItemName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('itemId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Item')),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
            ],
        ),
        migrations.CreateModel(
            name='ItemGameIndice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gmaeIndex', models.IntegerField()),
                ('generationId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Generation')),
                ('itemId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Item')),
            ],
        ),
        migrations.CreateModel(
            name='ItemFlingEffectProse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.CharField(max_length=250)),
                ('itemFlingEffectId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.ItemFlingEffect')),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
            ],
        ),
        migrations.CreateModel(
            name='ItemFlavorText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flavorText', models.CharField(max_length=250)),
                ('itemId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Item')),
                ('languageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('versionGroupId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.VersionGroup')),
            ],
        ),
        migrations.CreateModel(
            name='ItemFlagProse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.CharField(max_length=250)),
                ('itemFlagId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.ItemFlag')),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
            ],
        ),
        migrations.CreateModel(
            name='ItemFlagMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemFlagId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.ItemFlag')),
                ('itemId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Item')),
            ],
        ),
        migrations.CreateModel(
            name='ItemCategoryProse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('itemCategoryId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.ItemCategory')),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
            ],
        ),
        migrations.AddField(
            model_name='itemcategory',
            name='pocketId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.ItemPocket'),
        ),
        migrations.AddField(
            model_name='item',
            name='categoryId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.ItemCategory'),
        ),
        migrations.AddField(
            model_name='item',
            name='flingEffectId',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='PokeData.ItemFlingEffect'),
        ),
        migrations.CreateModel(
            name='GrowthRateProse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('growthRateId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.GrowthRate')),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
            ],
        ),
        migrations.CreateModel(
            name='GenerationName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('generationId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Generation')),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
            ],
        ),
        migrations.AddField(
            model_name='generation',
            name='mainRegionId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Region'),
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField()),
                ('experience', models.IntegerField()),
                ('growthRateId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.GrowthRate')),
            ],
        ),
        migrations.CreateModel(
            name='EvolutionTriggerProse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('evolutionTriggerId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.EvolutionTrigger')),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
            ],
        ),
        migrations.AddField(
            model_name='evolutionchain',
            name='babyTriggerItemId',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='PokeData.Item'),
        ),
        migrations.CreateModel(
            name='EncounterSlot',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('slot', models.IntegerField()),
                ('rarity', models.IntegerField()),
                ('encounterMethodId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.EncounterMethod')),
                ('versionGroupId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.VersionGroup')),
            ],
        ),
        migrations.CreateModel(
            name='EncounterMethodProse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('encounterMethodId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.EncounterMethod')),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
            ],
        ),
        migrations.CreateModel(
            name='EncounterConditionValueProse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('encounterConditionValueId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.EncounterConditionValue')),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
            ],
        ),
        migrations.CreateModel(
            name='EncounterConditionValueMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encounterConditionValueId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.EncounterConditionValue')),
                ('encounterId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Encounter')),
            ],
        ),
        migrations.CreateModel(
            name='EncounterConditionProse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('encounterConditionId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.EncounterCondition')),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
            ],
        ),
        migrations.AddField(
            model_name='encounter',
            name='encounterSlotId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.EncounterSlot'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='locationAreaId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.LocationArea'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='pokemonId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Pokemon'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='versionId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Version'),
        ),
        migrations.CreateModel(
            name='EggGroupProse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('eggGroupId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.EggGroup')),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
            ],
        ),
        migrations.CreateModel(
            name='ContestTypeName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('flavor', models.CharField(max_length=250)),
                ('color', models.CharField(max_length=250)),
                ('contestTypeId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.ContestType')),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
            ],
        ),
        migrations.CreateModel(
            name='ContestEffectProse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flavorText', models.CharField(max_length=250)),
                ('effect', models.CharField(max_length=250)),
                ('contestEffectId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.ContestEffect')),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
            ],
        ),
        migrations.CreateModel(
            name='ContestCombo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstMoveId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='first_move', to='PokeData.Move')),
                ('secondMoveId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='second_move', to='PokeData.Move')),
            ],
        ),
        migrations.CreateModel(
            name='CharacteristicText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=250)),
                ('characteristicId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Characteristic')),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
            ],
        ),
        migrations.AddField(
            model_name='characteristic',
            name='statId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Stat'),
        ),
        migrations.AddField(
            model_name='berryflavor',
            name='contestTypeId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.ContestType'),
        ),
        migrations.CreateModel(
            name='BerryFirmnessName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('berryFirmnessId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.BerryFirmness')),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
            ],
        ),
        migrations.AddField(
            model_name='berry',
            name='firmnessId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.BerryFirmness'),
        ),
        migrations.AddField(
            model_name='berry',
            name='itemId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Item'),
        ),
        migrations.AddField(
            model_name='berry',
            name='naturalGiftTypeId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Type'),
        ),
        migrations.CreateModel(
            name='AbilityProse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shortEffect', models.CharField(max_length=250)),
                ('abilityId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Ability')),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
            ],
        ),
        migrations.CreateModel(
            name='AbilityName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('abilityId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Ability')),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
            ],
        ),
        migrations.CreateModel(
            name='AbilityFlavorText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flavorText', models.CharField(max_length=250)),
                ('abilityId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Ability')),
                ('languageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
                ('versionGroupId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.VersionGroup')),
            ],
        ),
        migrations.CreateModel(
            name='AbilityChangelogProse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effect', models.CharField(max_length=250)),
                ('abilityChangelogId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.AbilityChangelog')),
                ('localLanguageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Language')),
            ],
        ),
        migrations.AddField(
            model_name='abilitychangelog',
            name='changedInVersionGroupId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.VersionGroup'),
        ),
        migrations.AddField(
            model_name='ability',
            name='generationId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PokeData.Generation'),
        ),
    ]
